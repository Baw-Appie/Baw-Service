extends ../includes/layout
block extscript
  script.
    $(function(){
      loadScriptwithCallback("https://cdn.ckeditor.com/4.9.2/standard/ckeditor.js", () => {
        $(".ckeditor").each((i, v) => {
          CKEDITOR.replace($(v).attr("name"))
        })
      })
      $("#edit").submit(function(){
        NProgress.start();
        $("#save").addClass("loading")
        $.ajax({
          type: "post",
          url : "#",
          data : $("#edit").serialize(),
          success : function s(a){
            if(a.success == true){
              iziToast.info({message: a.message, title: a.title})
              NProgress.done();
            } else {
              iziToast.warning({message: a.message, title: a.title})
              NProgress.done();
            }
          },
          error : function error(){ iziToast.warning({message: "Baw Service 빠른 설정 적용이 설정을 적용하는 도중 문제가 발생했습니다.", title:"이런.."}); },
          complete: () => $("#save").removeClass("loading")
        });
        return false;
      });
    });

block contents
  form(method="post", id="edit")
    .ui.header
      h2
        i.icon.far.fa-wrench
        | #{data.name} 설정
    each group in options.groups
      .ui.attached.message
        .header
          | #{group.korean}
        p #{group.description}
      .ui.attached.fluid.segment.form
        if group.select
          each select in group.select
            - if(options.savetojson.indexOf(select.name) == -1){
              - var vdata = rows[0][select.name]
            - } else {
              - var vdata = pagedata[select.name]
            - }
            .field
              .ui.toggle.checkbox
                label #{select.korean}
                if vdata == 1
                  input(type='checkbox', name=select.name, value=1 checked)
                else
                  input(type='checkbox', name=select.name, value=1)
                br
        if group.custom_select
          each select, i in group.custom_select
            .inline.fields
              label(for=select.name) #{select.korean}
              each custom_list, oo in select.option_data
                - if(options.savetojson.indexOf(select.name) == -1){
                  - var vdata = rows[0][select.name]
                - } else {
                  - var vdata = pagedata[select.name]
                - }
                .field
                  .ui.radio.checkbox
                    if vdata.toLowerCase() == select['option_data'][oo].toLowerCase()
                      input(type='radio', name=select.name, value=select["option_data"][oo], checked)
                    else
                      input(type='radio', name=select.name, value=select["option_data"][oo])
                    label #{select["option_korean"][oo]}
                    
        if group.custom_checkbox
          each checkbox, i in group.custom_checkbox
            .inline.fields
              label(for=checkbox.name) #{checkbox.korean}
              each custom_list, oo in checkbox.option_data
                - if(options.savetojson.indexOf(checkbox.name) == -1){
                  - var vdata = rows[0][checkbox.name]
                - } else {
                  - var vdata = pagedata[checkbox.name]
                - }
                .field
                  .ui.checkbox
                    if vdata.toLowerCase().indexOf(checkbox['option_data'][oo].toLowerCase()) != -1
                      input(type='checkbox', name=checkbox.name, value=checkbox["option_data"][oo], checked)
                    else
                      input(type='checkbox', name=checkbox.name, value=checkbox["option_data"][oo])
                    label #{checkbox["option_korean"][oo]}
                    
        if group.text
          each text, i in group.text
            .field
              label #{text.korean}
              - if(options.savetojson.indexOf(text.name) == -1){
                - var vdata = rows[0][text.name]
              - } else {
                - var vdata = pagedata[text.name]
              - }
              input(type='text', name=text.name, placeholder=text.korean, value!=vdata, disabled=text.disabled == true)
              if typeof text.help != "undefined"
                small=text.help
        if group.password
          each password, i in group.password
            .field
              label #{password.korean}
              input(type='password', name=password.name, placeholder=password.korean)
              
        if group.textarea
          each textarea, i in group.textarea
            .field
              label #{textarea.korean}
              - if(options.savetojson.indexOf(textarea.name) == -1){
                - var vdata = rows[0][textarea.name]
              - } else {
                - var vdata = pagedata[textarea.name]
              - }
                textarea(name=textarea.name, placeholder=textarea.korean, rows=5, class=typeof textarea.editor != "undefined" ? "ckeditor" : undefined)
                  if vdata != ""
                    | !{vdata}
              
      br
    if options.text
      | !{options.text}
    br
    if(!options.do_not_save)
      button.ui.button.primary.icon.labeled#save(type="submit")
        i.icon.fas.fa-save
        |  설정 적용
      a(onclick="$.pjax.reload('#contents')")
        button.ui.button.icon.labeled(type="button")
          i.icon.far.fa-undo
          |  적용 안함
    if(help)
      -if(help.indexOf("openlink:") == -1)
        button.ui.icon.button.icon.labeled(type="button" onclick="$('#help-modal').modal('show')")
          i.icon.fas.fa-question
          | 도움말
        .ui.modal#help-modal
          .header
            | 도움말
          .image.content
            .description
              .ui.header 도움말
              | !{help}
          .actions
            .ui.positive.right.labeled.button.icon
              | 닫기
              i.icon.far.fa-times
      -else
        -help = help.replace("openlink:", "")
        a(href=help target="_blank")
          button.ui.icon.button.icon.labeled(type="button")
            i.icon.fas.fa-question
            | 도움말
    if(options.delete)
      -var msg = options.delete.split(";")
      button.ui.icon.button.negative.icon.labeled(type="button" onclick=`location.href='${msg[1]}'`)
        i.icon.far.fa-trash-alt
        | #{msg[0]}
        
